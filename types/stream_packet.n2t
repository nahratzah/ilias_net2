/*
 * Copyright (c) 2012 Ariane van der Steldt <ariane@stack.nl>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <stdint.h>
#include <ilias/net2/ilias_net2_export.h>

/*
 * Stream acceptor data.
 */
struct stream_packet {
	uint32_t		 seq;
	uint16_t		 flags;
#define STREAM_END		0x8000
	struct net2_buffer	*payload;
};

/*
 * Header requires 8 bytes.
 * - seq	4 bytes
 * - flags	2 bytes
 * - payload	2 bytes to encode the length
 */
#define STREAM_PACKET_OVERHEAD	8
/*
 * Prefer to send payloads sized a multiple of 8 bytes,
 * so that if the buffers on either side will be able to
 * benefit from aligned access.
 *
 * Must be a power of 2.
 */
#define STREAM_PACKET_ALIGN	8
/*
 * Payload maximum length before encoding issues arise.
 */
#define STREAM_PACKET_MAXLEN	0xffff


%%
#include "stream_packet.h"
#include <ilias/net2/ctypes.h>
#include <ilias/net2/protocol.h>
%%

struct stream_packet(ctype struct stream_packet, protocol net2_proto) {
	uint32			 seq;
	uint16			 flags;
	short_net2_buffer	 payload;
};
